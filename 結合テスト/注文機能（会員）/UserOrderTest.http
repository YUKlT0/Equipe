##5-1
### カートに商品を追加
POST http://localhost:8080/api/usercart?userId=1
Content-Type: application/json

{
  "productId": 7,
  "quantity": 6
}

### 注文を実行
POST http://localhost:8080/api/user/orders?userId=1
Content-Type: application/json

{
  "customerInfo": {
    "customerName": "消費者　太郎",
    "customerAddress": "購入者住所",
    "customerEmail": "t@e.com",
    "shippingName": "配送先氏名",
    "shippingAddress": "住所",
    "payMethod": "cod"
  }
}


##5-2 
### カートに複数種類の商品を追加
POST http://localhost:8080/api/usercart?userId=1
Content-Type: application/json

{
  "productId": 6,
  "quantity": 2
}
{
  "productId": 7,
  "quantity": 3
}

### 注文を実行
POST http://localhost:8080/api/user/orders?userId=1
Content-Type: application/json

{
  "customerInfo": {
    "customerName": "消費者　太郎",
    "customerAddress": "購入者住所",
    "customerEmail": "t@e.com",
    "shippingName": "配送先氏名",
    "shippingAddress": "住所",
    "payMethod": "cod"
  }
}


##5-3 
### カートに在庫数と同数の商品を追加
POST http://localhost:8080/api/usercart?userId=1
Content-Type: application/json

{
  "productId": 6,
  "quantity": 40
}

### 注文を実行
POST http://localhost:8080/api/user/orders?userId=1
Content-Type: application/json

{
  "customerInfo": {
    "customerName": "消費者　太郎",
    "customerAddress": "購入者住所",
    "customerEmail": "t@e.com",
    "shippingName": "配送先氏名",
    "shippingAddress": "住所",
    "payMethod": "cod"
  }
}


##5-4
###カートの数量0で注文
POST http://localhost:8080/api/usercart?userId=1
Content-Type: application/json

{
  "productId": 6,
  "quantity": 0
}

###注文を実行
POST http://localhost:8080/api/user/orders?userId=1
Content-Type: application/json

{
  "customerInfo": {
    "customerName": "消費者　太郎",
    "customerAddress": "購入者住所",
    "customerEmail": "t@e.com",
    "shippingName": "配送先氏名",
    "shippingAddress": "住所",
    "payMethod": "cod"
  }
}


##5-5
###存在しないユーザーIDで注文実行
POST http://localhost:8080/api/user/orders?userId=999
Content-Type: application/json

{
  "customerInfo": {
    "customerName": "消費者　太郎",
    "customerAddress": "購入者住所",
    "customerEmail": "t@e.com",
    "shippingName": "配送先氏名",
    "shippingAddress": "住所",
    "payMethod": "cod"
  }
}


##5-6
### カートに在庫数より多い数量の商品を追加
POST http://localhost:8080/api/usercart?userId=1
Content-Type: application/json

{
  "productId": 6,
  "quantity": 50
}

### 注文を実行
POST http://localhost:8080/api/user/orders?userId=1
Content-Type: application/json

{
  "customerInfo": {
    "customerName": "消費者　太郎",
    "customerAddress": "購入者住所",
    "customerEmail": "t@e.com",
    "shippingName": "配送先氏名",
    "shippingAddress": "住所",
    "payMethod": "cod"
  }
}


##5-7
データローダーいじっていいのですか


##5-8 
### 名前未入力の状態で注文を実行
POST http://localhost:8080/api/user/orders?userId=1
Content-Type: application/json

{
  "customerInfo": {
    "customerName": "",
    "customerAddress": "購入者住所",
    "customerEmail": "t@e.com",
    "shippingName": "配送先氏名",
    "shippingAddress": "住所",
    "payMethod": "cod"
  }
}


##5-9
### 不正なメール形式の状態で注文を実行
POST http://localhost:8080/api/user/orders?userId=1
Content-Type: application/json

{
  "customerInfo": {
    "customerName": "消費者　太郎",
    "customerAddress": "購入者住所",
    "customerEmail": "invalid-mail",
    "shippingName": "配送先氏名",
    "shippingAddress": "住所",
    "payMethod": "cod"
  }
}


##5-10
### リクエストボディが空の状態で注文を実行
POST http://localhost:8080/api/user/orders?userId=1
Content-Type: application/json

{}


##5-11  
### わからん